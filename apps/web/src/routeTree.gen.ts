/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DemoRouteImport } from './routes/demo'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as SpreadsheetIndexRouteImport } from './routes/spreadsheet/index'
import { Route as ShareIndexRouteImport } from './routes/share/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as homeIndexRouteImport } from './routes/(home)/index'
import { Route as ShareTokenRouteImport } from './routes/share/$token'
import { Route as PlansProRouteImport } from './routes/plans/pro'
import { Route as PlansPersonalRouteImport } from './routes/plans/personal'
import { Route as PlansEnterpriseRouteImport } from './routes/plans/enterprise'
import { Route as DownloadTokenRouteImport } from './routes/download/$token'
import { Route as DocumentDocumentIdRouteImport } from './routes/document/$documentId'
import { Route as ApprovalsApprovalIdRouteImport } from './routes/approvals/$approvalId'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as DashboardSettingsRouteRouteImport } from './routes/dashboard/settings/route'
import { Route as DashboardUserOverviewIndexRouteImport } from './routes/dashboard/user-overview/index'
import { Route as DashboardSuperAdminIndexRouteImport } from './routes/dashboard/super-admin/index'
import { Route as DashboardSettingsIndexRouteImport } from './routes/dashboard/settings/index'
import { Route as DashboardProfileIndexRouteImport } from './routes/dashboard/profile/index'
import { Route as DashboardDriveIndexRouteImport } from './routes/dashboard/drive/index'
import { Route as DashboardAdminIndexRouteImport } from './routes/dashboard/admin/index'
import { Route as DashboardBuilkTransferIndexRouteImport } from './routes/dashboard/BuilkTransfer/index'
import { Route as DashboardSuperAdminUsersRouteImport } from './routes/dashboard/super-admin/users'
import { Route as DashboardSettingsUserRouteImport } from './routes/dashboard/settings/user'
import { Route as DashboardSettingsNotificationsRouteImport } from './routes/dashboard/settings/notifications'
import { Route as DashboardSettingsDisplayRouteImport } from './routes/dashboard/settings/display'
import { Route as DashboardSettingsAppearanceRouteImport } from './routes/dashboard/settings/appearance'
import { Route as DashboardSettingsAdminRouteImport } from './routes/dashboard/settings/admin'
import { Route as DashboardSettingsAccountRouteImport } from './routes/dashboard/settings/account'
import { Route as DashboardDriveTrashIndexRouteImport } from './routes/dashboard/drive/trash/index'
import { Route as DashboardDriveStarredIndexRouteImport } from './routes/dashboard/drive/starred/index'
import { Route as DashboardDriveSharedWithMeIndexRouteImport } from './routes/dashboard/drive/shared-with-me/index'
import { Route as DashboardDriveRecentIndexRouteImport } from './routes/dashboard/drive/recent/index'
import { Route as DashboardDriveMyDriveIndexRouteImport } from './routes/dashboard/drive/my-drive/index'
import { Route as DashboardDriveHomeIndexRouteImport } from './routes/dashboard/drive/home/index'

const DemoRoute = DemoRouteImport.update({
  id: '/demo',
  path: '/demo',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const SpreadsheetIndexRoute = SpreadsheetIndexRouteImport.update({
  id: '/spreadsheet/',
  path: '/spreadsheet/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShareIndexRoute = ShareIndexRouteImport.update({
  id: '/share/',
  path: '/share/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const homeIndexRoute = homeIndexRouteImport.update({
  id: '/(home)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShareTokenRoute = ShareTokenRouteImport.update({
  id: '/share/$token',
  path: '/share/$token',
  getParentRoute: () => rootRouteImport,
} as any)
const PlansProRoute = PlansProRouteImport.update({
  id: '/plans/pro',
  path: '/plans/pro',
  getParentRoute: () => rootRouteImport,
} as any)
const PlansPersonalRoute = PlansPersonalRouteImport.update({
  id: '/plans/personal',
  path: '/plans/personal',
  getParentRoute: () => rootRouteImport,
} as any)
const PlansEnterpriseRoute = PlansEnterpriseRouteImport.update({
  id: '/plans/enterprise',
  path: '/plans/enterprise',
  getParentRoute: () => rootRouteImport,
} as any)
const DownloadTokenRoute = DownloadTokenRouteImport.update({
  id: '/download/$token',
  path: '/download/$token',
  getParentRoute: () => rootRouteImport,
} as any)
const DocumentDocumentIdRoute = DocumentDocumentIdRouteImport.update({
  id: '/document/$documentId',
  path: '/document/$documentId',
  getParentRoute: () => rootRouteImport,
} as any)
const ApprovalsApprovalIdRoute = ApprovalsApprovalIdRouteImport.update({
  id: '/approvals/$approvalId',
  path: '/approvals/$approvalId',
  getParentRoute: () => rootRouteImport,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardSettingsRouteRoute = DashboardSettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardUserOverviewIndexRoute =
  DashboardUserOverviewIndexRouteImport.update({
    id: '/user-overview/',
    path: '/user-overview/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardSuperAdminIndexRoute =
  DashboardSuperAdminIndexRouteImport.update({
    id: '/super-admin/',
    path: '/super-admin/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardSettingsIndexRoute = DashboardSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardSettingsRouteRoute,
} as any)
const DashboardProfileIndexRoute = DashboardProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardDriveIndexRoute = DashboardDriveIndexRouteImport.update({
  id: '/drive/',
  path: '/drive/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAdminIndexRoute = DashboardAdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardBuilkTransferIndexRoute =
  DashboardBuilkTransferIndexRouteImport.update({
    id: '/BuilkTransfer/',
    path: '/BuilkTransfer/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardSuperAdminUsersRoute =
  DashboardSuperAdminUsersRouteImport.update({
    id: '/super-admin/users',
    path: '/super-admin/users',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardSettingsUserRoute = DashboardSettingsUserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => DashboardSettingsRouteRoute,
} as any)
const DashboardSettingsNotificationsRoute =
  DashboardSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => DashboardSettingsRouteRoute,
  } as any)
const DashboardSettingsDisplayRoute =
  DashboardSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => DashboardSettingsRouteRoute,
  } as any)
const DashboardSettingsAppearanceRoute =
  DashboardSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => DashboardSettingsRouteRoute,
  } as any)
const DashboardSettingsAdminRoute = DashboardSettingsAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardSettingsRouteRoute,
} as any)
const DashboardSettingsAccountRoute =
  DashboardSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => DashboardSettingsRouteRoute,
  } as any)
const DashboardDriveTrashIndexRoute =
  DashboardDriveTrashIndexRouteImport.update({
    id: '/drive/trash/',
    path: '/drive/trash/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardDriveStarredIndexRoute =
  DashboardDriveStarredIndexRouteImport.update({
    id: '/drive/starred/',
    path: '/drive/starred/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardDriveSharedWithMeIndexRoute =
  DashboardDriveSharedWithMeIndexRouteImport.update({
    id: '/drive/shared-with-me/',
    path: '/drive/shared-with-me/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardDriveRecentIndexRoute =
  DashboardDriveRecentIndexRouteImport.update({
    id: '/drive/recent/',
    path: '/drive/recent/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardDriveMyDriveIndexRoute =
  DashboardDriveMyDriveIndexRouteImport.update({
    id: '/drive/my-drive/',
    path: '/drive/my-drive/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardDriveHomeIndexRoute = DashboardDriveHomeIndexRouteImport.update({
  id: '/drive/home/',
  path: '/drive/home/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/contact': typeof ContactRoute
  '/demo': typeof DemoRoute
  '/dashboard/settings': typeof DashboardSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/approvals/$approvalId': typeof ApprovalsApprovalIdRoute
  '/document/$documentId': typeof DocumentDocumentIdRoute
  '/download/$token': typeof DownloadTokenRoute
  '/plans/enterprise': typeof PlansEnterpriseRoute
  '/plans/personal': typeof PlansPersonalRoute
  '/plans/pro': typeof PlansProRoute
  '/share/$token': typeof ShareTokenRoute
  '/': typeof homeIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/share': typeof ShareIndexRoute
  '/spreadsheet': typeof SpreadsheetIndexRoute
  '/dashboard/settings/account': typeof DashboardSettingsAccountRoute
  '/dashboard/settings/admin': typeof DashboardSettingsAdminRoute
  '/dashboard/settings/appearance': typeof DashboardSettingsAppearanceRoute
  '/dashboard/settings/display': typeof DashboardSettingsDisplayRoute
  '/dashboard/settings/notifications': typeof DashboardSettingsNotificationsRoute
  '/dashboard/settings/user': typeof DashboardSettingsUserRoute
  '/dashboard/super-admin/users': typeof DashboardSuperAdminUsersRoute
  '/dashboard/BuilkTransfer': typeof DashboardBuilkTransferIndexRoute
  '/dashboard/admin': typeof DashboardAdminIndexRoute
  '/dashboard/drive': typeof DashboardDriveIndexRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/super-admin': typeof DashboardSuperAdminIndexRoute
  '/dashboard/user-overview': typeof DashboardUserOverviewIndexRoute
  '/dashboard/drive/home': typeof DashboardDriveHomeIndexRoute
  '/dashboard/drive/my-drive': typeof DashboardDriveMyDriveIndexRoute
  '/dashboard/drive/recent': typeof DashboardDriveRecentIndexRoute
  '/dashboard/drive/shared-with-me': typeof DashboardDriveSharedWithMeIndexRoute
  '/dashboard/drive/starred': typeof DashboardDriveStarredIndexRoute
  '/dashboard/drive/trash': typeof DashboardDriveTrashIndexRoute
}
export interface FileRoutesByTo {
  '/contact': typeof ContactRoute
  '/demo': typeof DemoRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/approvals/$approvalId': typeof ApprovalsApprovalIdRoute
  '/document/$documentId': typeof DocumentDocumentIdRoute
  '/download/$token': typeof DownloadTokenRoute
  '/plans/enterprise': typeof PlansEnterpriseRoute
  '/plans/personal': typeof PlansPersonalRoute
  '/plans/pro': typeof PlansProRoute
  '/share/$token': typeof ShareTokenRoute
  '/': typeof homeIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/share': typeof ShareIndexRoute
  '/spreadsheet': typeof SpreadsheetIndexRoute
  '/dashboard/settings/account': typeof DashboardSettingsAccountRoute
  '/dashboard/settings/admin': typeof DashboardSettingsAdminRoute
  '/dashboard/settings/appearance': typeof DashboardSettingsAppearanceRoute
  '/dashboard/settings/display': typeof DashboardSettingsDisplayRoute
  '/dashboard/settings/notifications': typeof DashboardSettingsNotificationsRoute
  '/dashboard/settings/user': typeof DashboardSettingsUserRoute
  '/dashboard/super-admin/users': typeof DashboardSuperAdminUsersRoute
  '/dashboard/BuilkTransfer': typeof DashboardBuilkTransferIndexRoute
  '/dashboard/admin': typeof DashboardAdminIndexRoute
  '/dashboard/drive': typeof DashboardDriveIndexRoute
  '/dashboard/profile': typeof DashboardProfileIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/super-admin': typeof DashboardSuperAdminIndexRoute
  '/dashboard/user-overview': typeof DashboardUserOverviewIndexRoute
  '/dashboard/drive/home': typeof DashboardDriveHomeIndexRoute
  '/dashboard/drive/my-drive': typeof DashboardDriveMyDriveIndexRoute
  '/dashboard/drive/recent': typeof DashboardDriveRecentIndexRoute
  '/dashboard/drive/shared-with-me': typeof DashboardDriveSharedWithMeIndexRoute
  '/dashboard/drive/starred': typeof DashboardDriveStarredIndexRoute
  '/dashboard/drive/trash': typeof DashboardDriveTrashIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/contact': typeof ContactRoute
  '/demo': typeof DemoRoute
  '/dashboard/settings': typeof DashboardSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/approvals/$approvalId': typeof ApprovalsApprovalIdRoute
  '/document/$documentId': typeof DocumentDocumentIdRoute
  '/download/$token': typeof DownloadTokenRoute
  '/plans/enterprise': typeof PlansEnterpriseRoute
  '/plans/personal': typeof PlansPersonalRoute
  '/plans/pro': typeof PlansProRoute
  '/share/$token': typeof ShareTokenRoute
  '/(home)/': typeof homeIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/share/': typeof ShareIndexRoute
  '/spreadsheet/': typeof SpreadsheetIndexRoute
  '/dashboard/settings/account': typeof DashboardSettingsAccountRoute
  '/dashboard/settings/admin': typeof DashboardSettingsAdminRoute
  '/dashboard/settings/appearance': typeof DashboardSettingsAppearanceRoute
  '/dashboard/settings/display': typeof DashboardSettingsDisplayRoute
  '/dashboard/settings/notifications': typeof DashboardSettingsNotificationsRoute
  '/dashboard/settings/user': typeof DashboardSettingsUserRoute
  '/dashboard/super-admin/users': typeof DashboardSuperAdminUsersRoute
  '/dashboard/BuilkTransfer/': typeof DashboardBuilkTransferIndexRoute
  '/dashboard/admin/': typeof DashboardAdminIndexRoute
  '/dashboard/drive/': typeof DashboardDriveIndexRoute
  '/dashboard/profile/': typeof DashboardProfileIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/super-admin/': typeof DashboardSuperAdminIndexRoute
  '/dashboard/user-overview/': typeof DashboardUserOverviewIndexRoute
  '/dashboard/drive/home/': typeof DashboardDriveHomeIndexRoute
  '/dashboard/drive/my-drive/': typeof DashboardDriveMyDriveIndexRoute
  '/dashboard/drive/recent/': typeof DashboardDriveRecentIndexRoute
  '/dashboard/drive/shared-with-me/': typeof DashboardDriveSharedWithMeIndexRoute
  '/dashboard/drive/starred/': typeof DashboardDriveStarredIndexRoute
  '/dashboard/drive/trash/': typeof DashboardDriveTrashIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/contact'
    | '/demo'
    | '/dashboard/settings'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/approvals/$approvalId'
    | '/document/$documentId'
    | '/download/$token'
    | '/plans/enterprise'
    | '/plans/personal'
    | '/plans/pro'
    | '/share/$token'
    | '/'
    | '/dashboard/'
    | '/share'
    | '/spreadsheet'
    | '/dashboard/settings/account'
    | '/dashboard/settings/admin'
    | '/dashboard/settings/appearance'
    | '/dashboard/settings/display'
    | '/dashboard/settings/notifications'
    | '/dashboard/settings/user'
    | '/dashboard/super-admin/users'
    | '/dashboard/BuilkTransfer'
    | '/dashboard/admin'
    | '/dashboard/drive'
    | '/dashboard/profile'
    | '/dashboard/settings/'
    | '/dashboard/super-admin'
    | '/dashboard/user-overview'
    | '/dashboard/drive/home'
    | '/dashboard/drive/my-drive'
    | '/dashboard/drive/recent'
    | '/dashboard/drive/shared-with-me'
    | '/dashboard/drive/starred'
    | '/dashboard/drive/trash'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/contact'
    | '/demo'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/approvals/$approvalId'
    | '/document/$documentId'
    | '/download/$token'
    | '/plans/enterprise'
    | '/plans/personal'
    | '/plans/pro'
    | '/share/$token'
    | '/'
    | '/dashboard'
    | '/share'
    | '/spreadsheet'
    | '/dashboard/settings/account'
    | '/dashboard/settings/admin'
    | '/dashboard/settings/appearance'
    | '/dashboard/settings/display'
    | '/dashboard/settings/notifications'
    | '/dashboard/settings/user'
    | '/dashboard/super-admin/users'
    | '/dashboard/BuilkTransfer'
    | '/dashboard/admin'
    | '/dashboard/drive'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/super-admin'
    | '/dashboard/user-overview'
    | '/dashboard/drive/home'
    | '/dashboard/drive/my-drive'
    | '/dashboard/drive/recent'
    | '/dashboard/drive/shared-with-me'
    | '/dashboard/drive/starred'
    | '/dashboard/drive/trash'
  id:
    | '__root__'
    | '/dashboard'
    | '/contact'
    | '/demo'
    | '/dashboard/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/approvals/$approvalId'
    | '/document/$documentId'
    | '/download/$token'
    | '/plans/enterprise'
    | '/plans/personal'
    | '/plans/pro'
    | '/share/$token'
    | '/(home)/'
    | '/dashboard/'
    | '/share/'
    | '/spreadsheet/'
    | '/dashboard/settings/account'
    | '/dashboard/settings/admin'
    | '/dashboard/settings/appearance'
    | '/dashboard/settings/display'
    | '/dashboard/settings/notifications'
    | '/dashboard/settings/user'
    | '/dashboard/super-admin/users'
    | '/dashboard/BuilkTransfer/'
    | '/dashboard/admin/'
    | '/dashboard/drive/'
    | '/dashboard/profile/'
    | '/dashboard/settings/'
    | '/dashboard/super-admin/'
    | '/dashboard/user-overview/'
    | '/dashboard/drive/home/'
    | '/dashboard/drive/my-drive/'
    | '/dashboard/drive/recent/'
    | '/dashboard/drive/shared-with-me/'
    | '/dashboard/drive/starred/'
    | '/dashboard/drive/trash/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  ContactRoute: typeof ContactRoute
  DemoRoute: typeof DemoRoute
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  ApprovalsApprovalIdRoute: typeof ApprovalsApprovalIdRoute
  DocumentDocumentIdRoute: typeof DocumentDocumentIdRoute
  DownloadTokenRoute: typeof DownloadTokenRoute
  PlansEnterpriseRoute: typeof PlansEnterpriseRoute
  PlansPersonalRoute: typeof PlansPersonalRoute
  PlansProRoute: typeof PlansProRoute
  ShareTokenRoute: typeof ShareTokenRoute
  homeIndexRoute: typeof homeIndexRoute
  ShareIndexRoute: typeof ShareIndexRoute
  SpreadsheetIndexRoute: typeof SpreadsheetIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/demo': {
      id: '/demo'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/spreadsheet/': {
      id: '/spreadsheet/'
      path: '/spreadsheet'
      fullPath: '/spreadsheet'
      preLoaderRoute: typeof SpreadsheetIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/share/': {
      id: '/share/'
      path: '/share'
      fullPath: '/share'
      preLoaderRoute: typeof ShareIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/(home)/': {
      id: '/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/share/$token': {
      id: '/share/$token'
      path: '/share/$token'
      fullPath: '/share/$token'
      preLoaderRoute: typeof ShareTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plans/pro': {
      id: '/plans/pro'
      path: '/plans/pro'
      fullPath: '/plans/pro'
      preLoaderRoute: typeof PlansProRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plans/personal': {
      id: '/plans/personal'
      path: '/plans/personal'
      fullPath: '/plans/personal'
      preLoaderRoute: typeof PlansPersonalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plans/enterprise': {
      id: '/plans/enterprise'
      path: '/plans/enterprise'
      fullPath: '/plans/enterprise'
      preLoaderRoute: typeof PlansEnterpriseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/download/$token': {
      id: '/download/$token'
      path: '/download/$token'
      fullPath: '/download/$token'
      preLoaderRoute: typeof DownloadTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/document/$documentId': {
      id: '/document/$documentId'
      path: '/document/$documentId'
      fullPath: '/document/$documentId'
      preLoaderRoute: typeof DocumentDocumentIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/approvals/$approvalId': {
      id: '/approvals/$approvalId'
      path: '/approvals/$approvalId'
      fullPath: '/approvals/$approvalId'
      preLoaderRoute: typeof ApprovalsApprovalIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/user-overview/': {
      id: '/dashboard/user-overview/'
      path: '/user-overview'
      fullPath: '/dashboard/user-overview'
      preLoaderRoute: typeof DashboardUserOverviewIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/super-admin/': {
      id: '/dashboard/super-admin/'
      path: '/super-admin'
      fullPath: '/dashboard/super-admin'
      preLoaderRoute: typeof DashboardSuperAdminIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/'
      fullPath: '/dashboard/settings/'
      preLoaderRoute: typeof DashboardSettingsIndexRouteImport
      parentRoute: typeof DashboardSettingsRouteRoute
    }
    '/dashboard/profile/': {
      id: '/dashboard/profile/'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/drive/': {
      id: '/dashboard/drive/'
      path: '/drive'
      fullPath: '/dashboard/drive'
      preLoaderRoute: typeof DashboardDriveIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/admin/': {
      id: '/dashboard/admin/'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/BuilkTransfer/': {
      id: '/dashboard/BuilkTransfer/'
      path: '/BuilkTransfer'
      fullPath: '/dashboard/BuilkTransfer'
      preLoaderRoute: typeof DashboardBuilkTransferIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/super-admin/users': {
      id: '/dashboard/super-admin/users'
      path: '/super-admin/users'
      fullPath: '/dashboard/super-admin/users'
      preLoaderRoute: typeof DashboardSuperAdminUsersRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/settings/user': {
      id: '/dashboard/settings/user'
      path: '/user'
      fullPath: '/dashboard/settings/user'
      preLoaderRoute: typeof DashboardSettingsUserRouteImport
      parentRoute: typeof DashboardSettingsRouteRoute
    }
    '/dashboard/settings/notifications': {
      id: '/dashboard/settings/notifications'
      path: '/notifications'
      fullPath: '/dashboard/settings/notifications'
      preLoaderRoute: typeof DashboardSettingsNotificationsRouteImport
      parentRoute: typeof DashboardSettingsRouteRoute
    }
    '/dashboard/settings/display': {
      id: '/dashboard/settings/display'
      path: '/display'
      fullPath: '/dashboard/settings/display'
      preLoaderRoute: typeof DashboardSettingsDisplayRouteImport
      parentRoute: typeof DashboardSettingsRouteRoute
    }
    '/dashboard/settings/appearance': {
      id: '/dashboard/settings/appearance'
      path: '/appearance'
      fullPath: '/dashboard/settings/appearance'
      preLoaderRoute: typeof DashboardSettingsAppearanceRouteImport
      parentRoute: typeof DashboardSettingsRouteRoute
    }
    '/dashboard/settings/admin': {
      id: '/dashboard/settings/admin'
      path: '/admin'
      fullPath: '/dashboard/settings/admin'
      preLoaderRoute: typeof DashboardSettingsAdminRouteImport
      parentRoute: typeof DashboardSettingsRouteRoute
    }
    '/dashboard/settings/account': {
      id: '/dashboard/settings/account'
      path: '/account'
      fullPath: '/dashboard/settings/account'
      preLoaderRoute: typeof DashboardSettingsAccountRouteImport
      parentRoute: typeof DashboardSettingsRouteRoute
    }
    '/dashboard/drive/trash/': {
      id: '/dashboard/drive/trash/'
      path: '/drive/trash'
      fullPath: '/dashboard/drive/trash'
      preLoaderRoute: typeof DashboardDriveTrashIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/drive/starred/': {
      id: '/dashboard/drive/starred/'
      path: '/drive/starred'
      fullPath: '/dashboard/drive/starred'
      preLoaderRoute: typeof DashboardDriveStarredIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/drive/shared-with-me/': {
      id: '/dashboard/drive/shared-with-me/'
      path: '/drive/shared-with-me'
      fullPath: '/dashboard/drive/shared-with-me'
      preLoaderRoute: typeof DashboardDriveSharedWithMeIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/drive/recent/': {
      id: '/dashboard/drive/recent/'
      path: '/drive/recent'
      fullPath: '/dashboard/drive/recent'
      preLoaderRoute: typeof DashboardDriveRecentIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/drive/my-drive/': {
      id: '/dashboard/drive/my-drive/'
      path: '/drive/my-drive'
      fullPath: '/dashboard/drive/my-drive'
      preLoaderRoute: typeof DashboardDriveMyDriveIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/drive/home/': {
      id: '/dashboard/drive/home/'
      path: '/drive/home'
      fullPath: '/dashboard/drive/home'
      preLoaderRoute: typeof DashboardDriveHomeIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardSettingsRouteRouteChildren {
  DashboardSettingsAccountRoute: typeof DashboardSettingsAccountRoute
  DashboardSettingsAdminRoute: typeof DashboardSettingsAdminRoute
  DashboardSettingsAppearanceRoute: typeof DashboardSettingsAppearanceRoute
  DashboardSettingsDisplayRoute: typeof DashboardSettingsDisplayRoute
  DashboardSettingsNotificationsRoute: typeof DashboardSettingsNotificationsRoute
  DashboardSettingsUserRoute: typeof DashboardSettingsUserRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
}

const DashboardSettingsRouteRouteChildren: DashboardSettingsRouteRouteChildren =
  {
    DashboardSettingsAccountRoute: DashboardSettingsAccountRoute,
    DashboardSettingsAdminRoute: DashboardSettingsAdminRoute,
    DashboardSettingsAppearanceRoute: DashboardSettingsAppearanceRoute,
    DashboardSettingsDisplayRoute: DashboardSettingsDisplayRoute,
    DashboardSettingsNotificationsRoute: DashboardSettingsNotificationsRoute,
    DashboardSettingsUserRoute: DashboardSettingsUserRoute,
    DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
  }

const DashboardSettingsRouteRouteWithChildren =
  DashboardSettingsRouteRoute._addFileChildren(
    DashboardSettingsRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardSettingsRouteRoute: typeof DashboardSettingsRouteRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardSuperAdminUsersRoute: typeof DashboardSuperAdminUsersRoute
  DashboardBuilkTransferIndexRoute: typeof DashboardBuilkTransferIndexRoute
  DashboardAdminIndexRoute: typeof DashboardAdminIndexRoute
  DashboardDriveIndexRoute: typeof DashboardDriveIndexRoute
  DashboardProfileIndexRoute: typeof DashboardProfileIndexRoute
  DashboardSuperAdminIndexRoute: typeof DashboardSuperAdminIndexRoute
  DashboardUserOverviewIndexRoute: typeof DashboardUserOverviewIndexRoute
  DashboardDriveHomeIndexRoute: typeof DashboardDriveHomeIndexRoute
  DashboardDriveMyDriveIndexRoute: typeof DashboardDriveMyDriveIndexRoute
  DashboardDriveRecentIndexRoute: typeof DashboardDriveRecentIndexRoute
  DashboardDriveSharedWithMeIndexRoute: typeof DashboardDriveSharedWithMeIndexRoute
  DashboardDriveStarredIndexRoute: typeof DashboardDriveStarredIndexRoute
  DashboardDriveTrashIndexRoute: typeof DashboardDriveTrashIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardSettingsRouteRoute: DashboardSettingsRouteRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardSuperAdminUsersRoute: DashboardSuperAdminUsersRoute,
  DashboardBuilkTransferIndexRoute: DashboardBuilkTransferIndexRoute,
  DashboardAdminIndexRoute: DashboardAdminIndexRoute,
  DashboardDriveIndexRoute: DashboardDriveIndexRoute,
  DashboardProfileIndexRoute: DashboardProfileIndexRoute,
  DashboardSuperAdminIndexRoute: DashboardSuperAdminIndexRoute,
  DashboardUserOverviewIndexRoute: DashboardUserOverviewIndexRoute,
  DashboardDriveHomeIndexRoute: DashboardDriveHomeIndexRoute,
  DashboardDriveMyDriveIndexRoute: DashboardDriveMyDriveIndexRoute,
  DashboardDriveRecentIndexRoute: DashboardDriveRecentIndexRoute,
  DashboardDriveSharedWithMeIndexRoute: DashboardDriveSharedWithMeIndexRoute,
  DashboardDriveStarredIndexRoute: DashboardDriveStarredIndexRoute,
  DashboardDriveTrashIndexRoute: DashboardDriveTrashIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  ContactRoute: ContactRoute,
  DemoRoute: DemoRoute,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  ApprovalsApprovalIdRoute: ApprovalsApprovalIdRoute,
  DocumentDocumentIdRoute: DocumentDocumentIdRoute,
  DownloadTokenRoute: DownloadTokenRoute,
  PlansEnterpriseRoute: PlansEnterpriseRoute,
  PlansPersonalRoute: PlansPersonalRoute,
  PlansProRoute: PlansProRoute,
  ShareTokenRoute: ShareTokenRoute,
  homeIndexRoute: homeIndexRoute,
  ShareIndexRoute: ShareIndexRoute,
  SpreadsheetIndexRoute: SpreadsheetIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
